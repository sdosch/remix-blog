{
  "version": 3,
  "sources": ["browser-route-module:/Users/sdosch/src/remix/blog/app/routes/admin/$slug.edit.tsx?browser", "../../../../app/routes/admin/$slug.edit.tsx"],
  "sourcesContent": ["export { default } from \"/Users/sdosch/src/remix/blog/app/routes/admin/$slug.edit.tsx\";", "import { useEffect, useState } from \"react\";\nimport {\n  Form,\n  ActionFunction,\n  LoaderFunction,\n  useActionData,\n  useTransition,\n  redirect,\n} from \"remix\";\nimport { useLoaderData } from \"remix\";\nimport invariant from \"tiny-invariant\";\nimport { createPost, getPost, NewPost } from \"~/post\";\n\ntype PostError = {\n  title?: boolean;\n  slug?: boolean;\n  markdown?: boolean;\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.slug, \"expected params.slug\");\n  return getPost(params.slug);\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  await new Promise((res) => setTimeout(res, 1000));\n  const formData = await request.formData();\n\n  const title = formData.get(\"title\");\n  const slug = formData.get(\"slug\");\n  const markdown = formData.get(\"markdown\");\n\n  const errors: PostError = {};\n  if (!title) errors.title = true;\n  if (!slug) errors.slug = true;\n  if (!markdown) errors.markdown = true;\n\n  if (Object.keys(errors).length) {\n    return errors;\n  }\n\n  invariant(typeof title === \"string\");\n  invariant(typeof slug === \"string\");\n  invariant(typeof markdown === \"string\");\n\n  await createPost({ title, slug, markdown });\n\n  return redirect(\"/admin\");\n};\n\nexport default function EditPost() {\n  const errors = useActionData();\n  const transition = useTransition();\n  const loaderData = useLoaderData();\n  const [post, setPost] = useState<NewPost>(loaderData);\n\n  useEffect(() => {\n    setPost(loaderData);\n  }, [transition]);\n\n  return (\n    <Form method=\"post\">\n      <p>\n        <label>\n          Post Title: {errors?.title ? <em>Title is required</em> : null}\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={post.title}\n            onChange={(e) => setPost({ ...post, title: e.currentTarget.value })}\n          />\n        </label>\n      </p>\n      <p>\n        <label>\n          Post Slug: {errors?.slug ? <em>Slug is required</em> : null}\n          <input\n            type=\"text\"\n            name=\"slug\"\n            value={post.slug}\n            onChange={(e) => setPost({ ...post, slug: e.currentTarget.value })}\n          />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"markdown\">Markdown:</label>\n        {errors?.markdown ? <em>Markdown is required</em> : null}\n        <br />\n        <textarea\n          id=\"markdown\"\n          rows={10}\n          name=\"markdown\"\n          value={post.markdown}\n          onChange={(e) =>\n            setPost({ ...post, markdown: e.currentTarget.value })\n          }\n        />\n      </p>\n      <p>\n        <button type=\"submit\">\n          {transition.submission ? \"Saving...\" : \"Save Post\"}\n        </button>\n      </p>\n    </Form>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;;;ACAA;AAAA,mBAAoC;AAkDrB,oBAAoB;AACjC,QAAM,SAAS;AACf,QAAM,aAAa;AACnB,QAAM,aAAa;AACnB,QAAM,CAAC,MAAM,WAAW,2BAAkB;AAE1C,8BAAU,MAAM;AACd,YAAQ;AAAA,KACP,CAAC;AAEJ,SACE,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,KAAD,MACE,oCAAC,SAAD,MAAO,gBACQ,kCAAQ,SAAQ,oCAAC,MAAD,MAAI,uBAAyB,MAC1D,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAO,KAAK;AAAA,IACZ,UAAU,CAAC,MAAM,QAAQ,KAAK,MAAM,OAAO,EAAE,cAAc;AAAA,QAIjE,oCAAC,KAAD,MACE,oCAAC,SAAD,MAAO,eACO,kCAAQ,QAAO,oCAAC,MAAD,MAAI,sBAAwB,MACvD,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAO,KAAK;AAAA,IACZ,UAAU,CAAC,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,cAAc;AAAA,QAIhE,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAW,cACzB,kCAAQ,YAAW,oCAAC,MAAD,MAAI,0BAA4B,MACpD,oCAAC,MAAD,OACA,oCAAC,YAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAM;AAAA,IACN,MAAK;AAAA,IACL,OAAO,KAAK;AAAA,IACZ,UAAU,CAAC,MACT,QAAQ,KAAK,MAAM,UAAU,EAAE,cAAc;AAAA,OAInD,oCAAC,KAAD,MACE,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KACV,WAAW,aAAa,cAAc;AAAA;",
  "names": []
}
